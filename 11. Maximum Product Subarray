Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:
  Input: [2,3,-2,4]
  Output: 6
  Explanation: [2,3] has the largest product 6.
  
Example 2:
  Input: [-2,0,-1]
  Output: 0
  Explanation: The result cannot be 2, because [-2,-1] is not a subarray.
  
  
class Solution {
public:
    int maxProduct(vector<int>& nums) {
        if(nums.size() == 0) return -1;
        int current_max = nums[0];
        int current_min = nums[0];
        int final_max = nums[0];
        
        for(int i=1;i<nums.size();i++) {
            int temp = current_max;
            current_max = max(nums[i], max(current_max*nums[i], current_min*nums[i]));
            current_min = min(nums[i], min(temp*nums[i], current_min*nums[i]));
            
            if(current_max > final_max) {
                final_max = current_max;
            }
        }
        return final_max;
    }
};
